{
  "compilerOptions": {
    "outDir": ".",
    "baseUrl": ".",
    "target": "esnext",
    /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017','ES2018' or 'ESNEXT'. */
    "module": "esnext",
    "strictPropertyInitialization": false,
    /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', or 'ESNext'. */
    "lib": [
      "esnext",
      "dom"
    ],
    /* Specify library files to be included in the compilation. */
    "allowJs": false,
    "alwaysStrict": true,
    /* Allow javascript files to be compiled. */
    "jsx": "preserve",
    /* Specify JSX code generation: 'preserve', 'react-native', or 'react'. */
    "sourceMap": false,
    "declaration": true,
    "allowSyntheticDefaultImports": true,
//    "outFile": "index.js",
    /* Redirect output structure to the directory. *
    /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    "removeComments": true,
    /* Do not emit comments to output. */
    "importHelpers": true,
    /* Import emit helpers from 'tslib'. */

    "strict": true,
    /* Enable all strict type-checking options. */

    "noUnusedLocals": false,
    /* Report errors on unused locals. */

    "moduleResolution": "node",
    /* Specify module resolution strategy: 'node' (Node.js) or 'classic' (TypeScript pre-1.6). */
    /* Base directory to resolve non-absolute module names. */
    "esModuleInterop": true,
    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */

    "experimentalDecorators": true,
    /* Enables experimental support for ES7 decorators. */
    "resolveJsonModule": true,
    "paths": {
      "@core/*": ["packages/*/src"]
    }
  },
  "exclude": [
    "node_modules",
    "**/*.spec.ts"
  ]
}